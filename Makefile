# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: rmartins <rmartins@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2021/05/13 16:35:42 by rmartins          #+#    #+#              #
#    Updated: 2021/06/04 17:49:56 by rmartins         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

NAME = push_swap

LIBFT = libft/libft.a
CFLAGS = -Wall -Wextra -Werror -g
AR = ar rcsv
OBJ_DIR = obj
SRC_DIR = src
OBJ = $(SRC:%.c=$(OBJ_DIR)/%.o)

HEADER = ft_ansi.h \
		push_swap.h

SRC = main.c \
	array_utils.c \
	validate_args.c \
	arg_errors.c \
	sort_instructions.c \
	exec_instructions.c \
	check_sorted.c \
	sort_small.c \
	sort_small_utils.c \
	sort_big.c
# print_stack.c
# sort_algorithm.c


all: $(NAME)

$(NAME): $(OBJ)
	@echo $(ANSI_B_BGREEN) "compile libft" $(ANSI_RESET)$(ANSI_F_BBLACK)
	$(MAKE) all -C libft
	@echo $(ANSI_RESET) ""
	@echo $(ANSI_B_BGREEN) "compile executable" $(ANSI_RESET)$(ANSI_F_BBLACK)
	gcc $(CFLAGS) $(OBJ) $(LIBFT) -o $(NAME)
	@echo $(ANSI_RESET) ""

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c $(addprefix inc/,$(HEADER))
	@echo $(ANSI_B_BGREEN) "compile push_swap objects" $(ANSI_RESET)$(ANSI_F_BBLACK)
	mkdir -p $(dir $@)
	gcc $(CFLAGS) -Iinc -c $< -o $@
	@echo $(ANSI_RESET)

clean:
	@echo $(ANSI_B_RED) "clean" $(ANSI_RESET)$(ANSI_F_BRED)
	$(MAKE) clean -C libft
	rm -rf $(OBJ_DIR)
	@echo $(ANSI_RESET) ""

fclean: clean
	@echo $(ANSI_B_RED) "fclean" $(ANSI_RESET)$(ANSI_F_BRED)
	$(MAKE) fclean -C libft
	rm -f cub3DS
	rm -f $(NAME)
	@echo $(ANSI_RESET) ""

re: fclean all

bonus: all
	
.PHONY: all clean fclean

# colors
ANSI_RESET = "\033[0m"
ANSI_B_RED = "\033[41m"
ANSI_B_BGREEN = "\033[42;1m"
ANSI_F_BRED = "\033[31;1m"
ANSI_F_BBLACK = "\033[30;1m"


lib:
	$(MAKE) -C libft

norm:
	@echo $(ANSI_B_RED) "norminette v3" $(ANSI_RESET)
	$(MAKE) norm -C libft
	@norminette $(addprefix inc/,$(HEADER)) $(addprefix src/,$(SRC))

libnorm:
	@echo $(ANSI_B_RED) "libft norminette" $(ANSI_RESET)
	$(MAKE) norm -C libft

run: all
	@echo $(ANSI_B_RED) "Running for debbuger without sanitize" $(ANSI_RESET)
	./$(NAME) $(LIST_INTEGER)
	@./$(NAME) $(LIST_INTEGER) | wc -l
	@./$(NAME) $(LIST_INTEGER) | ./checker_linux $(LIST_INTEGER)

runv: all
	@echo $(ANSI_B_RED) "Valgrind RESULT" $(ANSI_RESET)
	#valgrind -q --leak-check=full --track-origins=yes --show-leak-kinds=all ./$(NAME) $(LIST_INTEGER)
	valgrind --leak-check=full --show-leak-kinds=all -s ./$(NAME) $(LIST_INTEGER)

runs: all
	@echo $(ANSI_B_RED) "Running with sanitize" $(ANSI_RESET)
	gcc $(CFLAGS) -fsanitize=address $(OBJ) $(LIBFT) -o push_swaps
	./push_swaps $(LIST_INTEGER)

# LIST_INTEGER = 2 6 20 -2 7 1 5 15 25
LIST_INTEGER = 4 2 3 1 5
LIST_INTEGER = 5 2 1 3 4
LIST_INTEGER = 5 3 1 4 2
LIST_INTEGER = 3 4 10 7 2 8 9 1 6 5
LIST_INTEGER = 8 2 6 9 5 10 1 7 3 4
LIST_INTEGER = 5 6 9 1 3 8 4 10 7 2
# LIST_INTEGER = 15 4 10 29 25 13 1 22 30 21 11 26 2 16 19 12 7 6 3 8 23 20 17 27 28 18 24 5 9 14

# LIST_INTEGER = 4 10 7 6 9 1 5 2 3 8
# LIST_INTEGER = 9 7 6 2 4 3 8 1 10 5
# LIST_INTEGER = 9 10 5 1 2 7 3 8 6 4


# 100 erro
# ok LIST_INTEGER = 34 53 76 93 21 3 92 26 96 61 6 42 2 81 30 10 25 58 41 87 99 75 31 65 79 16 17 7 94 51 78 88 85 40 60 52 8 38 14 82 55 4 83 9 36 69 72 49 98 35 48 86 39 63 45 66 46 59 47 33 15 20 27 91 90 19 28 11 56 13 67 64 37 32 100 74 12 43 89 54 62 23 95 84 24 70 50 68 80 5 71 73 18 44 77 29 1 22 97 57
LIST_INTEGER = 100 87 74 92 62 52 49 38 51 83 50 43 4 56 54 33 97 24 59 3 91 55 15 65 86 63 64 73 25 47 16 28 93 21 60 26 36 78 82 37 2 11 66 17 46 94 72 77 96 88 14 19 34 48 98 22 99 85 95 12 58 71 39 6 81 9 40 27 90 29 67 79 89 75 70 84 68 76 32 20 7 35 30 23 53 42 1 8 13 10 61 57 44 41 80 69 18 45 5 31

# 500 erro
# ok
# ok
# 1000 erro
# ok

LIST_INTEGER = 1 5 2 4 3
LIST_INTEGER = 5 4 2 1 3
LIST_INTEGER = 4 5 2 1 3
LIST_INTEGER = 5 2 4 1 3